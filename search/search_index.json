{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u041e\u0442\u0447\u0451\u0442\u044b","text":"<ul> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161</li> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162</li> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163</li> </ul>"},{"location":"report_1/","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21161","text":"<p>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u0428\u0430\u0444\u0438\u043a\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0410\u0437\u0430\u0442\u043e\u0432\u0438\u0447 </p> <p>\u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u041f\u0418\u041d (\u0418\u041a\u0422)</p> <p>\u0413\u0440\u0443\u043f\u043f\u0430: \u041a3339  </p> <p>\u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447  </p>"},{"location":"report_1/#1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: UDP.  </p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u0414\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u0431\u044b\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u043c\u043e\u0434\u0443\u043b\u044c <code>socket</code>. \u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043e\u0437\u0434\u0430\u0451\u0442 UDP-\u0441\u043e\u043a\u0435\u0442, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u0451\u0442 UDP-\u0441\u043e\u043a\u0435\u0442, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u00abHello, server\u00bb \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u00abHello, client\u00bb.  </p> <p>\u041a\u043e\u0434: </p> <p>server.py:</p> <pre><code>import socket\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\nif __name__ == '__main__':\n    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    udp_socket.bind((host, port))\n    print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {host}:{port}\")\n\n    while True:\n        data, addr = udp_socket.recvfrom(1024)\n        message = data.decode(\"utf-8\")\n        print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 {addr}: {message}\")\n\n        reply = \"Hello, client\"\n        udp_socket.sendto(reply.encode(\"utf-8\"), addr)\n</code></pre> <p>client.py:</p> <pre><code>import socket\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\nif __name__ == '__main__':\n    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n    message = \"Hello, server\"\n    udp_socket.sendto(message.encode(\"utf-8\"), (host, port))\n\n    data, addr = udp_socket.recvfrom(1024)\n    print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode('utf-8')}\")\n</code></pre>"},{"location":"report_1/#2","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430). \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: TCP.  </p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a\u0430\u0442\u0435\u0442\u044b <code>a</code> \u0438 <code>b</code>. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443 \u043f\u043e \u0444\u043e\u0440\u043c\u0443\u043b\u0435 <code>c = sqrt(a^2 + b^2)</code> \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443.  </p> <p>\u041a\u043e\u0434: </p> <p>client.py:</p> <pre><code>import socket\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\nif __name__ == \"__main__\":\n    a = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u0430\u0442\u0435\u0442 a: \")\n    b = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u0430\u0442\u0435\u0442 b: \")\n\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n        s.connect((host, port))\n        s.sendall(f\"{a} {b}\".encode(\"utf-8\"))\n        data = s.recv(1024)\n\n    print(\"\u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\", data.decode(\"utf-8\"))\n</code></pre> <p>server.py:</p> <pre><code>import socket\nimport math\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\nif __name__ == \"__main__\":\n    tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    tcp_socket.bind((host, port))\n    tcp_socket.listen(5)\n    print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 {host}:{port} (TCP)\")\n\n    while True:\n        conn, addr = tcp_socket.accept()\n        with conn:\n            data = conn.recv(1024)\n            if not data:\n                continue\n            try:\n                a_str, b_str = data.decode(\"utf-8\").split()\n                a, b = float(a_str), float(b_str)\n                c = math.sqrt(a*a + b*b)\n                result = f\"\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 c = {c}\"\n            except Exception as e:\n                result = f\"\u041e\u0448\u0438\u0431\u043a\u0430: {e}\"\n            conn.sendall(result.encode(\"utf-8\"))\n</code></pre>"},{"location":"report_1/#3","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043e\u0442\u0434\u0430\u0451\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 <code>index.html</code>.  </p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u0411\u044b\u043b \u0441\u043e\u0437\u0434\u0430\u043d TCP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 <code>index.html</code>. HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043d\u043e\u043f\u043a\u0443 \u0438 \u0441\u0447\u0451\u0442\u0447\u0438\u043a \u043a\u043b\u0438\u043a\u043e\u0432.  </p> <p>\u041a\u043e\u0434: </p> <p>index.html:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u041a\u043b\u0438\u043a\u0435\u0440&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; text-align: center; margin-top: 100px; }\n        button { font-size: 20px; padding: 10px 20px; }\n        #count { font-size: 24px; margin-top: 20px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u041a\u043b\u0438\u043a\u0438&lt;/h1&gt;\n    &lt;button id=\"btn\"&gt;\u041a\u043b\u0438\u043a&lt;/button&gt;\n    &lt;div id=\"count\"&gt;0&lt;/div&gt;\n\n    &lt;script&gt;\n        const btn = document.getElementById(\"btn\");\n        const countDiv = document.getElementById(\"count\");\n        let count = 0;\n\n        btn.addEventListener(\"click\", () =&gt; {\n            count++;\n            countDiv.textContent = count;\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>server.py:</p> <pre><code>import socket\nimport os\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\nif __name__ == \"__main__\":\n    tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    tcp_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    tcp_socket.bind((host, port))\n    tcp_socket.listen(5)\n\n    print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{host}:{port}\")\n\n    while True:\n        conn, addr = tcp_socket.accept()\n        with conn:\n            request = conn.recv(1024).decode(\"utf-8\", errors=\"ignore\")\n            print(f\"\\n--- \u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 {addr} ---\")\n            print(request)\n\n            if os.path.exists(\"index.html\"):\n                with open(\"index.html\", \"r\", encoding=\"utf-8\") as f:\n                    body = f.read()\n                response = (\n                    \"HTTP/1.1 200 OK\\r\\n\"\n                    \"Content-Type: text/html; charset=utf-8\\r\\n\"\n                    f\"Content-Length: {len(body.encode('utf-8'))}\\r\\n\"\n                    \"Connection: close\\r\\n\"\n                    \"\\r\\n\"\n                    f\"{body}\"\n                )\n            else:\n                body = \"&lt;h1&gt;\u0424\u0430\u0439\u043b index.html \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d&lt;/h1&gt;\"\n                response = (\n                    \"HTTP/1.1 404 Not Found\\r\\n\"\n                    \"Content-Type: text/html; charset=utf-8\\r\\n\"\n                    f\"Content-Length: {len(body.encode('utf-8'))}\\r\\n\"\n                    \"Connection: close\\r\\n\"\n                    \"\\r\\n\"\n                    f\"{body}\"\n                )\n\n            conn.sendall(response.encode(\"utf-8\"))\n</code></pre>"},{"location":"report_1/#4","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: TCP. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c.  </p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435 (\u0447\u0435\u0440\u0435\u0437 <code>threading</code>). \u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u0438\u043a (\u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c). \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c, \u043a\u0440\u043e\u043c\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f.  </p> <p>\u041a\u043e\u0434: </p> <p>server.py:</p> <pre><code>import socket\nimport threading\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\nENC = \"utf-8\"\n\n# conn -&gt; nickname\nclients = {}\nclients_lock = threading.Lock()\n\n\ndef send_line(conn, text: str):\n    try:\n        conn.sendall((text + \"\\n\").encode(ENC))\n    except OSError:\n        pass\n\n\ndef broadcast(text: str, exclude=None):\n    with clients_lock:\n        dead = []\n        for c in list(clients.keys()):\n            if c is exclude:\n                continue\n            try:\n                c.sendall((text + \"\\n\").encode(ENC))\n            except OSError:\n                dead.append(c)\n        for d in dead:\n            name = clients.pop(d, None)\n            try:\n                d.close()\n            except OSError:\n                pass\n\n\ndef handle_client(conn: socket.socket, addr):\n    name = None\n    try:\n        f = conn.makefile(\"r\", encoding=ENC, newline=\"\\n\")\n\n        # \u0412\u044b\u0431\u043e\u0440 \u043d\u0438\u043a\u0430\n        while True:\n            send_line(conn, \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0438\u043a: \")\n            name_line = f.readline()\n            if not name_line:\n                return\n            candidate = name_line.strip()\n            if not candidate:\n                send_line(conn, \"\u274c \u041d\u0438\u043a \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c.\")\n                continue\n            with clients_lock:\n                if candidate in clients.values():\n                    send_line(conn, \"\u274c \u041d\u0438\u043a \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0434\u0440\u0443\u0433\u043e\u0439.\")\n                else:\n                    name = candidate\n                    clients[conn] = name\n                    break\n\n        send_line(conn, f\"\u2705 \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c, {name}! \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 /quit \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430.\")\n        broadcast(f\"\ud83d\udfe2 {name} \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443.\", exclude=None)\n\n        for line in f:\n            msg = line.rstrip(\"\\n\")\n            if not msg:\n                continue\n            if msg.strip().lower() == \"/quit\":\n                send_line(conn, \"\u041f\u043e\u043a\u0430! \u0412\u044b \u0432\u044b\u0448\u043b\u0438 \u0438\u0437 \u0447\u0430\u0442\u0430.\")\n                break\n            broadcast(f\"[{name}]: {msg}\", exclude=conn)\n\n    except Exception:\n        pass\n    finally:\n        with clients_lock:\n            if conn in clients:\n                left_name = clients.pop(conn)\n                broadcast(f\"\ud83d\udd34 {left_name} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442.\", exclude=None)\n        try:\n            conn.close()\n        except OSError:\n            pass\n\n\ndef main():\n    tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    tcp_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    tcp_socket.bind((host, port))\n    tcp_socket.listen()\n    print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {host}:{port}\")\n\n    try:\n        while True:\n            conn, addr = tcp_socket.accept()\n            threading.Thread(target=handle_client, args=(conn, addr), daemon=True).start()\n    except KeyboardInterrupt:\n        print(\"\\n\u041e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430...\")\n    finally:\n        tcp_socket.close()\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>client.py:</p> <pre><code>import socket\nimport threading\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\n\ndef recv_loop(sock: socket.socket):\n    \"\"\"\u0424\u043e\u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043f\u0440\u0438\u0451\u043c\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043f\u043e\u0441\u043b\u0435 \u0432\u0445\u043e\u0434\u0430 \u0432 \u0447\u0430\u0442.\"\"\"\n    try:\n        f = sock.makefile(\"r\", encoding=\"utf-8\", newline=\"\\n\")\n        for line in f:\n            print(line.rstrip(\"\\n\"))\n    except Exception:\n        pass\n    finally:\n        try:\n            sock.close()\n        except OSError:\n            pass\n\n\ndef main():\n    tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    tcp_socket.connect((host, port))\n    f = tcp_socket.makefile(\"r\", encoding=\"utf-8\", newline=\"\\n\")\n\n    # \u0412\u044b\u0431\u043e\u0440 \u043d\u0438\u043a\u0430\n    while True:\n        prompt = f.readline()\n        if not prompt:\n            print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043a\u0440\u044b\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.\")\n            return\n        print(prompt.strip())\n        name = input(\"&gt; \")\n        tcp_socket.sendall((name + \"\\n\").encode(\"utf-8\"))\n        reply = f.readline()\n        if not reply:\n            print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043a\u0440\u044b\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435.\")\n            return\n        print(reply.strip())\n        if reply.startswith(\"\u2705\"):\n            break\n\n    t = threading.Thread(target=recv_loop, args=(tcp_socket,), daemon=True)\n    t.start()\n\n    try:\n        while True:\n            line = input()\n            if not line:\n                continue\n            tcp_socket.sendall((line + \"\\n\").encode(\"utf-8\"))\n            if line.strip().lower() == \"/quit\":\n                break\n    except KeyboardInterrupt:\n        tcp_socket.sendall((\"/quit\\n\").encode(\"utf-8\"))\n    finally:\n        try:\n            tcp_socket.close()\n        except OSError:\n            pass\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"report_1/#5","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430: \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u0434\u0430\u0442\u044c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043e\u043a.  </p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d TCP-\u0441\u043e\u043a\u0435\u0442. - GET-\u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0438 \u0444\u043e\u0440\u043c\u043e\u0439 \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430. - POST-\u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c (\u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430 + \u043e\u0446\u0435\u043d\u043a\u0430), \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c, \u0438 \u0441\u043d\u043e\u0432\u0430 \u043e\u0442\u0434\u0430\u0451\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. - \u0414\u043b\u044f \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a \u0438 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.  </p> <p>\u041a\u043e\u0434: </p> <p>server.py:</p> <pre><code>import socket\nimport urllib.parse\nfrom collections import defaultdict\nfrom students.k3339.Shafikov_Maxim.Lr1.config import host, port\n\n\ngrades = defaultdict(list)\n\n\ndef render_html():\n    rows = \"\"\n    if grades:\n        for subj, marks in grades.items():\n            avg = sum(marks) / len(marks)\n            marks_str = \", \".join(str(m) for m in marks)\n            rows += f\"&lt;tr&gt;&lt;td&gt;{subj}&lt;/td&gt;&lt;td&gt;{marks_str}&lt;/td&gt;&lt;td&gt;{avg:.2f}&lt;/td&gt;&lt;/tr&gt;\\n\"\n    else:\n        rows = '&lt;tr&gt;&lt;td colspan=\"3\"&gt;\u041f\u043e\u043a\u0430 \u043d\u0435\u0442 \u043e\u0446\u0435\u043d\u043e\u043a&lt;/td&gt;&lt;/tr&gt;'\n\n    return f\"\"\"&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c&lt;/title&gt;\n  &lt;style&gt;\n    body {{ font-family: Arial, sans-serif; margin: 40px; }}\n    table {{ border-collapse: collapse; width: 500px; margin-bottom: 20px; }}\n    th, td {{ border: 1px solid #333; padding: 8px; text-align: center; }}\n    th {{ background: #eee; }}\n    form {{ display: flex; flex-direction: column; width: 400px; gap: 10px; }}\n    label {{ display: flex; justify-content: space-between; }}\n    input[type=text], input[type=number] {{ flex: 1; margin-left: 10px; }}\n    input[type=submit] {{ padding: 8px; font-size: 16px; }}\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c&lt;/h1&gt;\n  &lt;table&gt;\n    &lt;tr&gt;&lt;th&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430&lt;/th&gt;&lt;th&gt;\u041e\u0446\u0435\u043d\u043a\u0438&lt;/th&gt;&lt;th&gt;\u0421\u0440\u0435\u0434\u043d\u044f\u044f&lt;/th&gt;&lt;/tr&gt;\n    {rows}\n  &lt;/table&gt;\n  &lt;form method=\"POST\"&gt;\n    &lt;label&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: &lt;input type=\"text\" name=\"subject\" required&gt;&lt;/label&gt;\n    &lt;label&gt;\u041e\u0446\u0435\u043d\u043a\u0430 (1-5): &lt;input type=\"number\" name=\"grade\" min=\"1\" max=\"5\" required&gt;&lt;/label&gt;\n    &lt;input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\"\"\"\n\n\ndef handle_request(request: str):\n    lines = request.split(\"\\r\\n\")\n    if not lines:\n        return \"HTTP/1.1 400 Bad Request\\r\\n\\r\\n\"\n\n    first_line = lines[0]\n    method, *_ = first_line.split()\n\n    if method == \"POST\":\n        body = request.split(\"\\r\\n\\r\\n\", 1)[-1]\n        data = urllib.parse.parse_qs(body)\n        subject = data.get(\"subject\", [\"\"])[0].strip()\n        grade_str = data.get(\"grade\", [\"\"])[0].strip()\n\n        if subject and grade_str.isdigit():\n            grade = int(grade_str)\n            if 1 &lt;= grade &lt;= 5:\n                grades[subject].append(grade)\n\n    body = render_html()\n    headers = [\n        \"HTTP/1.1 200 OK\",\n        \"Content-Type: text/html; charset=utf-8\",\n        f\"Content-Length: {len(body.encode(\"utf-8\"))}\",\n        \"Connection: close\",\n        \"\",\n        \"\"\n    ]\n    return \"\\r\\n\".join(headers) + body\n\n\ndef main():\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as tcp_socket:\n        tcp_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n        tcp_socket.bind((host, port))\n        tcp_socket.listen(5)\n        print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043d\u0430 http://{host}:{port}\")\n\n        while True:\n            conn, addr = tcp_socket.accept()\n            print(f\"[+] \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {addr[0]}:{addr[1]}\")\n            with conn:\n                request = conn.recv(4096).decode(\"utf-8\", errors=\"ignore\")\n                if not request:\n                    continue\n                response = handle_request(request)\n                conn.sendall(response.encode(\"utf-8\"))\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"report_1/#_1","title":"\u0412\u044b\u0432\u043e\u0434","text":"<p>\u0412 \u0445\u043e\u0434\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u21161 \u0431\u044b\u043b\u0438 \u0438\u0437\u0443\u0447\u0435\u043d\u044b \u043e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0435\u0442\u044c\u044e \u043d\u0430 Python \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 <code>socket</code>. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b: - UDP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u043a\u043b\u0438\u0435\u043d\u0442 (\u043e\u0431\u043c\u0435\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438). - TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u043a\u043b\u0438\u0435\u043d\u0442 (\u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f). - \u041c\u0438\u043d\u0438-\u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440, \u043e\u0442\u0434\u0430\u044e\u0449\u0438\u0439 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. - \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u0441 \u043f\u043e\u0442\u043e\u043a\u0430\u043c\u0438. - \u0412\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET/POST-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445.  </p> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u043b\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\u043c\u0438 UDP \u0438 TCP, \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0441\u0435\u0442\u0435\u0432\u044b\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.  </p>"},{"location":"report_2/","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21162","text":"<p>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u0428\u0430\u0444\u0438\u043a\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0410\u0437\u0430\u0442\u043e\u0432\u0438\u0447 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u041f\u0418\u041d (\u0418\u041a\u0422) \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3339 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447</p>"},{"location":"report_2/#_1","title":"\u0422\u0435\u043c\u0430 \u0438 \u0446\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u0435\u0431\u2011\u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u0431\u0430\u0437\u0435 FastAPI \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 Jinja2, \u0421\u0423\u0411\u0414 PostgreSQL \u0438 ORM SQLAlchemy. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u043e\u0442\u0437\u044b\u0432\u044b, \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044b, \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0438 \u043e\u0441\u043d\u043e\u0432\u043d\u0443\u044e \u0431\u0438\u0437\u043d\u0435\u0441\u2011\u043b\u043e\u0433\u0438\u043a\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439.</p>"},{"location":"report_2/#_2","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>app/\n  main.py                      # \u0437\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, middleware, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a\n  pages/                       # \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u044c\n    router.py\n  bookings/                    # \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439\n    router.py\n  auth/                        # \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n    router.py\n    deps.py\n    utils.py\n  crud/                        # \u0441\u043b\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0411\u0414\n    hotels.py\n    bookings.py\n    reviews.py\n    users.py\n  db/                          # \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0411\u0414\n    base.py\n    models.py\n    utils.py\n  core/                        # \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c\n    config.py\n    security.py\n  templates/                   # Jinja2 \u0448\u0430\u0431\u043b\u043e\u043d\u044b\n    base.html, index.html, ...\n  static/                      # \u0441\u0442\u0430\u0442\u0438\u043a\u0430 \u0438 \u0441\u0442\u0438\u043b\u0438\n    css/style.css\nalembic.ini, app/alembic/      # \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0441\u0445\u0435\u043c\u044b \u0411\u0414\nDockerfile, docker-compose.yml # \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\n</code></pre> <p>\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438: - <code>app/db</code> \u2014 \u043c\u043e\u0434\u0435\u043b\u0438 SQLAlchemy \u0438 \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u0441\u043b\u043e\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. - <code>app/crud</code> \u2014 \u0438\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u044f\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0411\u0414 (\u0447\u0442\u0435\u043d\u0438\u0435/\u0437\u0430\u043f\u0438\u0441\u044c, \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f, \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f). - <code>app/pages</code> \u0438 <code>app/bookings</code> \u2014 HTTP\u2011\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. - <code>app/auth</code> \u2014 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f, \u043b\u043e\u0433\u0438\u043d, middleware\u2011\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e cookie\u2011\u0442\u043e\u043a\u0435\u043d\u0443. - <code>app/templates</code> \u2014 \u0448\u0430\u0431\u043b\u043e\u043d\u044b Jinja2 \u0434\u043b\u044f UI.</p>"},{"location":"report_2/#_3","title":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 (\u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435)","text":"<pre><code># app/db/models.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b)\nclass BookingStatus(enum.Enum):\n    pending = \"pending\"\n    confirmed = \"confirmed\"\n    cancelled = \"cancelled\"\n    checked_in = \"checked_in\"\n    checked_out = \"checked_out\"\n\nclass Booking(Base):\n    __tablename__ = \"bookings\"\n    id = Column(Integer, primary_key=True, index=True)\n    user_id = Column(Integer, ForeignKey(\"users.id\"))\n    room_id = Column(Integer, ForeignKey(\"rooms.id\"))\n    check_in_date = Column(Date, nullable=False)\n    check_out_date = Column(Date, nullable=False)\n    status = Column(Enum(BookingStatus), default=BookingStatus.pending, nullable=False)\n</code></pre> <p>\u041c\u043e\u0434\u0435\u043b\u0438 <code>User</code>, <code>Hotel</code>, <code>Room</code>, <code>Review</code> \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043e\u0442\u0435\u043b\u0438, \u043d\u043e\u043c\u0435\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u044b \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0421\u0432\u044f\u0437\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u044b \u0447\u0435\u0440\u0435\u0437 <code>relationship</code>.</p>"},{"location":"report_2/#middleware","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 middleware","text":"<pre><code># app/main.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u044b)\napp = FastAPI(title=\"Hotel Booking Service\")\napp.mount(\"/static\", StaticFiles(directory=\"app/static\"), name=\"static\")\ntemplates = Jinja2Templates(directory=\"app/templates\")\n\n@app.on_event(\"startup\")\nasync def startup_event():\n    db: Session = next(get_db())\n    create_initial_admin(db)\n    db.close()\n\n@app.middleware(\"http\")\nasync def add_user_to_context(request: Request, call_next):\n    user = await get_current_user_from_cookie(request, next(get_db()))\n    request.state.user = user\n    return await call_next(request)\n</code></pre> <p>\u041f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u043c\u0438\u043d (\u0435\u0441\u043b\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442). Middleware \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 <code>request.state.user</code> \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u0445.</p>"},{"location":"report_2/#_4","title":"\u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b","text":""},{"location":"report_2/#_5","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 <code>/</code>","text":"<p>\u0424\u0443\u043d\u043a\u0446\u0438\u0438: - \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043e\u0442\u0435\u043b\u0435\u0439 \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0446\u0435\u043d\u043e\u0439 \u043d\u043e\u043c\u0435\u0440\u0430 \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. - \u0424\u0438\u043b\u044c\u0442\u0440\u044b \u043f\u043e \u0446\u0435\u043d\u0435, \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0443/\u0446\u0435\u043d\u0435. - \u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u043f\u043e 5 \u043e\u0442\u0435\u043b\u0435\u0439 \u0441 \u00ab\u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u043d\u043e\u0439\u00bb \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0435\u0439.</p> <pre><code># app/pages/router.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442)\n@router.get(\"/\", response_class=HTMLResponse)\nasync def get_main_page(request: Request, db: Session = Depends(get_db),\n                        page: int = 1, sort: str = Query(\"rating\", enum=[\"rating\",\"price_asc\",\"price_desc\"]),\n                        min_price: str = Query(None), max_price: str = Query(None)):\n    # \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 \u0446\u0435\u043d\u044b\n    min_price_float = float(min_price) if min_price and min_price.strip() else None\n    max_price_float = float(max_price) if max_price and max_price.strip() else None\n\n    hotels_with_stats, total_pages = hotel_repo.get_paginated(\n        db=db, page=page, per_page=5, sort=sort,\n        min_price=min_price_float, max_price=max_price_float,\n    )\n    return templates.TemplateResponse(\"index.html\", {\n        \"request\": request,\n        \"hotels\": hotels_with_stats,\n        \"page\": page,\n        \"total_pages\": total_pages,\n        \"sort\": sort,\n        \"min_price\": min_price,\n        \"max_price\": max_price,\n    })\n</code></pre> <p>\u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432: \u00ab1\u20115\u00bb, \u00ab&gt;&gt; 6\u201110\u00bb \u0438 \u0442.\u0434., \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439/\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445 \u043b\u0438\u0448\u043d\u0438\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \u0441\u043a\u0440\u044b\u0432\u0430\u044e\u0442\u0441\u044f.</p>"},{"location":"report_2/#hotelhotel_id","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0442\u0435\u043b\u044f <code>/hotel/{hotel_id}</code>","text":"<p>\u0424\u0443\u043d\u043a\u0446\u0438\u0438: - \u0414\u0435\u0442\u0430\u043b\u0438 \u043e\u0442\u0435\u043b\u044f, \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439. - \u0414\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0430 \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u0433\u043e\u0441\u0442\u0435\u0439 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446 (\u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439). - \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430 \u0441 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0435\u0439 \u0434\u0430\u0442: \u043d\u0430\u0447\u0430\u043b\u043e &lt; \u043a\u043e\u043d\u0435\u0446, \u043a\u043e\u043d\u0435\u0446 \u2014 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c.</p> <pre><code># app/pages/router.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442)\n@router.post(\"/hotel/{hotel_id}/review\")\nasync def add_review(..., stay_start: date = Form(), stay_end: date = Form()):\n    today = date.today()\n    if stay_start &gt;= stay_end:\n        return RedirectResponse(url=f\"/hotel/{hotel_id}?error=invalid_dates\", status_code=302)\n    if stay_end &gt; today:\n        return RedirectResponse(url=f\"/hotel/{hotel_id}?error=future_stay\", status_code=302)\n    review_repo.create(...)\n    return RedirectResponse(url=f\"/hotel/{hotel_id}\", status_code=302)\n</code></pre>"},{"location":"report_2/#cabinet","title":"\u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 <code>/cabinet</code>","text":"<p>\u0424\u0443\u043d\u043a\u0446\u0438\u0438: - \u0421\u043f\u0438\u0441\u043e\u043a \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439 \u043f\u043e 5. - \u041e\u0442\u043c\u0435\u043d\u0430 \u0431\u0443\u0434\u0443\u0449\u0438\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439.</p>"},{"location":"report_2/#adminbookings","title":"\u0410\u0434\u043c\u0438\u043d\u2011\u043f\u0430\u043d\u0435\u043b\u044c <code>/admin/bookings</code>","text":"<p>\u0424\u0443\u043d\u043a\u0446\u0438\u0438: - \u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0435\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439 \u043f\u043e 5. - \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435/\u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u044f\u0432\u043e\u043a.</p>"},{"location":"report_2/#_6","title":"\u0411\u0438\u0437\u043d\u0435\u0441\u2011\u043b\u043e\u0433\u0438\u043a\u0430 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u0445","text":""},{"location":"report_2/#_7","title":"\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043e\u0442\u0435\u043b\u0435\u0439: \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430, \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f, \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f","text":"<pre><code># app/crud/hotels.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442)\nq = (db.query(Hotel, func.min(Room.price).label(\"min_room_price\"),\n              func.avg(Review.rating.cast(Float)).label(\"avg_rating\"))\n       .outerjoin(Room, Room.hotel_id == Hotel.id)\n       .outerjoin(Review, Review.hotel_id == Hotel.id)\n       .group_by(Hotel.id))\n\nif min_price is not None:\n    q = q.having(func.min(Room.price) &gt;= min_price)\nif max_price is not None:\n    q = q.having(func.min(Room.price) &lt;= max_price)\n\nif sort == \"rating\":\n    q = q.order_by(func.coalesce(func.avg(Review.rating), 0).desc())\nelif sort == \"price_asc\":\n    q = q.order_by(func.coalesce(func.min(Room.price), 1e12).asc())\nelif sort == \"price_desc\":\n    q = q.order_by(func.coalesce(func.min(Room.price), 0).desc())\n\ntotal = q.count()\nitems = q.offset((page - 1) * per_page).limit(per_page).all()\n</code></pre>"},{"location":"report_2/#_8","title":"\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439: \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438 \u0430\u0434\u043c\u0438\u043d\u2011\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438","text":"<pre><code># app/crud/bookings.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442)\ndef get_pending_paginated(self, db: Session, page: int, per_page: int):\n    offset = (page - 1) * per_page\n    query = db.query(models.Booking).filter(models.Booking.status == models.BookingStatus.pending)\n    total = query.count()\n    bookings = query.order_by(models.Booking.id).offset(offset).limit(per_page).all()\n    return bookings, math.ceil(total / per_page)\n</code></pre>"},{"location":"report_2/#_9","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u0430\u044f cookie\u2011\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f: 1. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043b\u043e\u0433\u0438\u043d\u0438\u0442\u0441\u044f, \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u044b\u0434\u0430\u0435\u0442 JWT (\u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 <code>SECRET_KEY</code>) \u0438 \u043a\u043b\u0430\u0434\u0435\u0442 \u0435\u0433\u043e \u0432 cookie <code>access_token</code> (HttpOnly). 2. Middleware \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442 \u0442\u043e\u043a\u0435\u043d, \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 <code>request.state.user</code>. 3. \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b\u2011\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0437\u0430\u0449\u0438\u0449\u0430\u044e\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043b\u0438\u0447\u043d\u043e\u043c\u0443 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0443 \u0438 \u0430\u0434\u043c\u0438\u043d\u2011\u043f\u0430\u043d\u0435\u043b\u0438.</p> <pre><code># app/auth/deps.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442)\nasync def get_current_user_from_cookie(request: Request, db: Session = Depends(get_db)):\n    token = request.cookies.get(\"access_token\")\n    if not token:\n        return None\n    payload = jwt.decode(token, settings.SECRET_KEY, algorithms=[settings.ALGORITHM])\n    email = payload.get(\"sub\")\n    user = user_repo.get_by_email(db, email=email)\n    return user\n</code></pre>"},{"location":"report_2/#ui","title":"\u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f (UI)","text":"<p>\u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0435\u0434\u0438\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c \u00ab\u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u043d\u043e\u0439\u00bb \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 (\u043f\u043e 5 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432): - \u041b\u0435\u0432\u0430\u044f \u043a\u043d\u043e\u043f\u043a\u0430 \u0441\u043a\u0440\u044b\u0442\u0430 \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435. - \u041f\u0440\u0430\u0432\u0430\u044f \u0441\u043a\u0440\u044b\u0442\u0430 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439. - \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u00abi \u2013 i+4\u00bb; \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0435 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u044b \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u043a\u043d\u043e\u043f\u043a\u0430\u0445 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442 Jinja2):</p> <pre><code>{% set start_item = (page - 1) * 5 + 1 %}\n{% set end_item = page * 5 %}\n{% if page &gt; 1 %}\n  &lt;a class=\"page-link\" href=\"?page={{ page - 1 }}\"&gt;{{ (page-2)*5+1 }} - {{ (page-1)*5 }} &lt;&lt;&lt;/a&gt;\n{% endif %}\n&lt;span class=\"page-link\"&gt;{{ start_item }} - {{ end_item }}&lt;/span&gt;\n{% if page &lt; total_pages %}\n  &lt;a class=\"page-link\" href=\"?page={{ page + 1 }}\"&gt;&gt;&gt; {{ page*5+1 }} - {{ (page+1)*5 }}&lt;/a&gt;\n{% endif %}\n</code></pre>"},{"location":"report_2/#_10","title":"\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u0442","text":"<ul> <li>\u041f\u0440\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438: \u0434\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430 &lt; \u0434\u0430\u0442\u044b \u0432\u044b\u0435\u0437\u0434\u0430 \u0438 \u0437\u0430\u0435\u0437\u0434 \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c.</li> <li>\u0412 \u043e\u0442\u0437\u044b\u0432\u0430\u0445: \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d (\u0434\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c).</li> </ul> <pre><code># app/bookings/router.py (\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442)\nif check_in_date &gt;= check_out_date:\n    return RedirectResponse(url=\"/?error=invalid_dates\", status_code=302)\nif check_in_date &lt; date.today():\n    return RedirectResponse(url=\"/?error=past_checkin\", status_code=302)\n</code></pre> <p>\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u0445 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Bootstrap\u2011alert.</p>"},{"location":"report_2/#docker","title":"\u0421\u0431\u043e\u0440\u043a\u0430 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a (Docker)","text":"<p>\u0421\u0435\u0440\u0432\u0438\u0441 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d. \u0417\u0430\u043f\u0443\u0441\u043a:</p> <pre><code>docker compose up --build -d\n</code></pre> <p>\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 <code>http://localhost:8000</code> (\u0438\u043b\u0438 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430).</p>"},{"location":"report_2/#_11","title":"\u0412\u044b\u0432\u043e\u0434","text":"<p>\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u041b\u0420 \u21162 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0432\u0435\u0431\u2011\u0441\u0435\u0440\u0432\u0438\u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0435\u043b\u0435\u0439: - \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0430 \u043d\u0430 \u0441\u043b\u043e\u0438 (\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044f, \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438, \u043c\u043e\u0434\u0435\u043b\u0438, \u0448\u0430\u0431\u043b\u043e\u043d\u044b). - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0444\u0438\u043b\u044c\u0442\u0440\u044b, \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430, \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0441 \u0443\u0434\u043e\u0431\u043d\u044b\u043c UI. - \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f, \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u043e\u0442\u0437\u044b\u0432\u044b, \u0430\u0434\u043c\u0438\u043d\u2011\u043f\u0430\u043d\u0435\u043b\u044c. \u0420\u0430\u0431\u043e\u0442\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u043b\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 Jinja2, FastAPI \u0438 Sqlalchemy</p>"},{"location":"report_3/","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21163","text":"<p>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u0428\u0430\u0444\u0438\u043a\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0410\u0437\u0430\u0442\u043e\u0432\u0438\u0447</p> <p>\u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u041f\u0418\u041d (\u0418\u041a\u0422)</p> <p>\u0413\u0440\u0443\u043f\u043f\u0430: \u041a3339</p> <p>\u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447</p> <p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435</p>"},{"location":"report_3/#1","title":"\ud83d\udd39 1. \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b","text":"<p>\u0426\u0435\u043b\u044c\u044e \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \"Edulytica\" \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0430\u0431\u043e\u0440 \u043e\u0442\u043a\u0430\u0437\u043e\u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0445, \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447 \u043f\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432.</p>"},{"location":"report_3/#2","title":"\ud83d\udd39 2. \u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<ol> <li>\u0421\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u0443\u044e \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0438\u0441 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c JWT.</li> <li>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 API-\u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u043e\u0439: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \"\u0442\u0438\u043a\u0435\u0442\u043e\u0432\" \u043d\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f\u043c\u0438 (events), \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432.</li> <li>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0438\u0441-\u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u043c\u0438, \u043c\u043d\u043e\u0433\u043e\u044d\u0442\u0430\u043f\u043d\u044b\u043c\u0438 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438 (\u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u0430\u043c\u0438), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0432 \u0441\u0435\u0431\u044f \u0432\u044b\u0437\u043e\u0432\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 LLM-\u043c\u043e\u0434\u0435\u043b\u0435\u0439.</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0438\u0441\u044b-\u0432\u043e\u0440\u043a\u0435\u0440\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u0437\u0430\u0434\u0430\u0447\u0438 \u0447\u0435\u0440\u0435\u0437 \u0431\u0440\u043e\u043a\u0435\u0440 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 Kafka.</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0438\u0441 RAG (Retrieval-Augmented Generation) \u0434\u043b\u044f \u043e\u0431\u043e\u0433\u0430\u0449\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u043c\u043e\u0434\u0435\u043b\u044f\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043e\u043c \u0438\u0437 \u0431\u0430\u0437\u044b \u0437\u043d\u0430\u043d\u0438\u0439.</li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c API Gateway (Nginx) \u0434\u043b\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u043c \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c.</li> <li>\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0431\u0440\u043e\u043a\u0435\u0440\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 Kafka.</li> </ol>"},{"location":"report_3/#3","title":"\ud83d\udd39 3. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438","text":"<ul> <li>\u042f\u0437\u044b\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: Python 3.11+</li> <li>\u0424\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a: FastAPI</li> <li>\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445: PostgreSQL</li> <li>ORM \u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438: SQLAlchemy, Alembic</li> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445: Pydantic</li> <li>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f: JWT (JSON Web Tokens)</li> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438: Kafka</li> <li>\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c: Redis</li> <li>\u0412\u0435\u043a\u0442\u043e\u0440\u043d\u0430\u044f \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 (\u0434\u043b\u044f RAG): ChromaDB</li> <li>API Gateway: Nginx</li> <li>\u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u044f: Docker, Docker Compose</li> </ul>"},{"location":"report_3/#4","title":"\ud83d\udd39 4. \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u0438\u043c\u0435\u0435\u0442 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u0443\u044e \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0443. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 <code>src/</code>:</p> <ul> <li><code>auth/</code>: \u0421\u0435\u0440\u0432\u0438\u0441 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e, \u0432\u0445\u043e\u0434, \u0432\u044b\u0445\u043e\u0434 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438.</li> <li><code>edulytica_api/</code>: \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 API-\u0441\u0435\u0440\u0432\u0438\u0441. \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u0432\u0445\u043e\u0434\u0430 \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0438\u043a\u0435\u0442\u043e\u0432, \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432), \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438.</li> <li><code>orchestration/</code>: \u0421\u0435\u0440\u0432\u0438\u0441-\u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440. \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043c \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u043d\u0430 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0438, \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u043c\u0438 \u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c, \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u043c\u043f\u0442\u044b \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u0432 Kafka.</li> <li><code>models/</code>: \u0421\u0435\u0440\u0432\u0438\u0441\u044b-\u0432\u043e\u0440\u043a\u0435\u0440\u044b \u0434\u043b\u044f LLM. \u041a\u0430\u0436\u0434\u044b\u0439 \u0442\u0430\u043a\u043e\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \"\u0441\u043b\u0443\u0448\u0430\u0435\u0442\" \u0441\u0432\u043e\u044e \u0442\u0435\u043c\u0443 \u0432 Kafka, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0435\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u044f\u0437\u044b\u043a\u043e\u0432\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, Qwen \u0438\u043b\u0438 Vikhr) \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u043e\u0431\u0449\u0443\u044e \u0442\u0435\u043c\u0443 \u0434\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432.</li> <li><code>rag/</code>: \u0421\u0435\u0440\u0432\u0438\u0441 Retrieval-Augmented Generation. \u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 API \u0434\u043b\u044f \u043e\u0431\u043e\u0433\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043c\u043f\u0442\u043e\u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043e\u043c. \u041e\u043d \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u043e\u0439 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 ChromaDB, \u043a\u0443\u0434\u0430 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0442\u0435\u043a\u0441\u0442\u044b.</li> <li><code>gateway/</code>: \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f Nginx, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u0435\u0442 \u0432 \u0440\u043e\u043b\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043a\u0441\u0438. \u041e\u043d \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0432\u0441\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0438\u0445 \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b (<code>auth</code>, <code>edulytica_api</code>).</li> <li><code>common/</code>: \u041e\u0431\u0449\u0438\u0439 \u043a\u043e\u0434, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u0445. \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u043c\u043e\u0434\u0435\u043b\u0438 SQLAlchemy, CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0411\u0414, \u0443\u0442\u0438\u043b\u0438\u0442\u044b \u0434\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0438 \u0442.\u0434.</li> <li><code>llm/</code>: \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438 \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u044f\u0437\u044b\u043a\u043e\u0432\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.</li> </ul>"},{"location":"report_3/#5","title":"\ud83d\udd39 5. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b","text":""},{"location":"report_3/#_1","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u043e\u043b\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.</p> <ul> <li>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f: \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e email \u0438 \u043f\u0430\u0440\u043e\u043b\u044f. \u041d\u0430 \u043f\u043e\u0447\u0442\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u0434 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f.</li> <li>\u041b\u043e\u0433\u0438\u043d: \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0430 \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 <code>access_token</code> \u0438 <code>refresh_token</code>. <code>refresh_token</code> \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 <code>HttpOnly</code> cookie \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438.</li> <li>\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430: <code>access_token</code> \u0438\u043c\u0435\u0435\u0442 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0441\u0440\u043e\u043a \u0436\u0438\u0437\u043d\u0438. \u041a\u043e\u0433\u0434\u0430 \u043e\u043d \u0438\u0441\u0442\u0435\u043a\u0430\u0435\u0442, \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f <code>refresh_token</code>.</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u0435\u043c: \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0432\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 (\u0438\u043c\u044f, \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044e) \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.</li> </ul> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438\u0437 <code>src/auth/routers/auth.py</code>:</p> <pre><code>@api_logs(auth_router.post('/login'))\nasync def login_handler(\n        response: Response,\n        login: str = Body(...),\n        password: str = Body(...),\n        session: AsyncSession = Depends(get_session)\n):\n    # ... \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043f\u0430\u0440\u043e\u043b\u044f ...\n    user = await UserCrud.get_active_user(session=session, login=login)\n    if not user or not verify_password(password, user.password_hash):\n        raise HTTPException(\n            status_code=HTTP_401_UNAUTHORIZED,\n            detail='Credentials are incorrect'\n        )\n\n    # ... \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 ...\n    access_token = create_access_token(user.id)\n    checker = uuid.uuid4()\n    refresh_token = create_refresh_token(subject=user.id, checker=checker)\n\n    # ... \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 refresh_token \u0432 \u0411\u0414 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0432 cookie ...\n    response.set_cookie(\n        key=\"refresh_token\",\n        value=f\"Bearer {refresh_token}\",\n        httponly=True,\n        expires=get_expiry(REFRESH_TOKEN_EXPIRE_MINUTES)\n    )\n    return {'detail': 'Credentials are correct', 'access_token': access_token}\n</code></pre> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432 \u042d\u0442\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. 1. \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0444\u0430\u0439\u043b\u0430: \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0447\u0435\u0440\u0435\u0437 edulytica_api \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 (.pdf, .docx) \u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0442\u0438\u043f \u0437\u0430\u0434\u0430\u0447\u0438 (mega_task_id). 2. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0438\u043a\u0435\u0442\u0430: \u0412 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \"\u0442\u0438\u043a\u0435\u0442\", \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0438 \u0437\u0430\u0434\u0430\u0447\u0443. 3. \u0417\u0430\u043f\u0443\u0441\u043a \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0446\u0438\u0438: edulytica_api \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0441\u0435\u0440\u0432\u0438\u0441 orchestration, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u044f ID \u0442\u0438\u043a\u0435\u0442\u0430, \u0442\u0435\u043a\u0441\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438 ID \u0437\u0430\u0434\u0430\u0447\u0438. \u042d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432 \u0444\u043e\u043d\u043e\u0432\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. 4. \u0420\u0430\u0431\u043e\u0442\u0430 \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430:    - \u041e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 mega_task_id \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0433\u0440\u0430\u0444 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447.    - \u041e\u043d \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0442\u0438\u043a\u0435\u0442\u0430 \u0432 Redis.    - \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439.    - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u043c\u043f\u0442. \u0415\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 RAG, \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a rag-\u0441\u0435\u0440\u0432\u0438\u0441\u0443 \u0434\u043b\u044f \u043e\u0431\u043e\u0433\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u043c\u043f\u0442\u0430.    - \u0417\u0430\u0434\u0430\u0447\u0430 \u0441 \u043f\u0440\u043e\u043c\u043f\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043d\u0443\u0436\u043d\u0443\u044e \u0442\u0435\u043c\u0443 Kafka (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, llm_tasks.qwen). 5. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u044c\u044e:    - \u0421\u0435\u0440\u0432\u0438\u0441-\u0432\u043e\u0440\u043a\u0435\u0440 (models) \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0438\u0437 Kafka.    - \u041e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0438\u043d\u0444\u0435\u0440\u0435\u043d\u0441 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.    - \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043e\u0431\u0449\u0443\u044e \u0442\u0435\u043c\u0443 llm_tasks.result. 6. \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f:    - \u041e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u0442\u0435\u043c\u0443 llm_tasks.result. \u041f\u043e\u043b\u0443\u0447\u0438\u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u043e\u043d \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0438 \u0432 Redis (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0430 COMPLETED) \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.    - \u0417\u0430\u0442\u0435\u043c \u043e\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0438, \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b. 7. \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435: \u041a\u043e\u0433\u0434\u0430 \u0432\u0441\u0435 \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b, \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442 \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u043e\u0442\u0447\u0435\u0442 \u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 API-\u0432\u044b\u0437\u043e\u0432 \u043a edulytica_api \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u043f\u043e\u043c\u0435\u0447\u0430\u044f \u0442\u0438\u043a\u0435\u0442 \u043a\u0430\u043a \"\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0439\".</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u0430 \u0432 \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0435 \u0438\u0437 src/orchestration/orchestrator.py:</p> <pre><code>class Orchestrator:\n    # ...\n    async def run_pipeline(\n            self, ticket_id: Union[str, uuid.UUID], document_text: str\n    ):\n        dependencies = self.TASKS.get(self.mega_task_id)\n        # ...\n        await self.state_manager.create_ticket(\n            ticket_id=ticket_id,\n            # ...\n        )\n\n        initial_subtasks_to_run = []\n        for task_id, subtasks in dependencies.items():\n            for subtask_id, details in subtasks.items():\n                if not details.get(\"dependencies\"):\n                    initial_subtasks_to_run.append(subtask_id)\n\n        execution_tasks = [\n            self._execute_subtask(ticket_id, subtask_id, document_text)\n            for subtask_id in initial_subtasks_to_run\n        ]\n\n        if execution_tasks:\n            await asyncio.gather(*execution_tasks)\n</code></pre>"},{"location":"report_3/#6","title":"\ud83d\udd39 6. \u0412\u044b\u0432\u043e\u0434","text":"<p>\u0412 \u0445\u043e\u0434\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c FastAPI. \u0411\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b, \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0449\u0438\u0435 \u0437\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0438, \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0443\u044e \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 LLM-\u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0431\u0440\u043e\u043a\u0435\u0440 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 Kafka. \u0412\u0441\u0435 \u0431\u044b\u043b\u043e \u0440\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e docker-compose \u0434\u043b\u044f \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u043a\u0440\u043e\u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u0438 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0433\u0438\u0431\u043a\u0443\u044e \u0438 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u043c\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u0443\u044e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0435\u043c\u043a\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0431\u0435\u0437 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u0437\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0447\u043d\u044b\u0439 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u0430 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u044b.</p>"}]}